name: Docker pipeline
run-name: ${{ github.actor }} triggered Docker pipeline ðŸš€
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
jobs:
  controller:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Docker meta
        id: meta-controller-manager
        uses: docker/metadata-action@v4
        with:
          images: substratusai/controller-manager
      - name: Build and push
        id: build-and-push-controller-manager
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: "linux/amd64,linux/arm64"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-controller-manager.outputs.tags }}
          labels: ${{ steps.meta-controller-manager.outputs.labels }}
  installer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Docker meta
        id: meta-installer
        uses: docker/metadata-action@v4
        with:
          images: substratusai/installer
      - name: Build and push
        id: build-and-push-installer
        uses: docker/build-push-action@v4
        with:
          context: install/
          platforms: "linux/amd64,linux/arm64"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-installer.outputs.tags }}
          labels: ${{ steps.meta-installer.outputs.labels }}
  sci-gcp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: substratusai/sci-gcp
      - name: Build and push
        id: build-and-push-sci-gcp
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.sci-gcp
          platforms: "linux/amd64,linux/arm64"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
