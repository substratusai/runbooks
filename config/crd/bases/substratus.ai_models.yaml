---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: models.substratus.ai
spec:
  group: substratus.ai
  names:
    categories:
    - ai
    kind: Model
    listKind: ModelList
    plural: models
    singular: model
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].reason
      name: Condition
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: "The Model API is used to build and train machine learning models.
          \n - Base models can be built from a Git repository. \n - Models can be
          trained by combining a base Model with a Dataset."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the desired state of the Model.
            properties:
              container:
                description: Container that contains model code and dependencies.
                properties:
                  git:
                    description: Git is a reference to a git repository containing
                      model code.
                    properties:
                      branch:
                        description: Branch is the git branch to use.
                        type: string
                      path:
                        description: Path within the git repository referenced by
                          url.
                        type: string
                      url:
                        description: 'URL to the git repository. Example: https://github.com/my-username/my-repo'
                        type: string
                    type: object
                  image:
                    description: Image of a container that can be used to run the
                      model.
                    type: string
                type: object
              loader:
                description: Loader should be set to run a loading job.
                properties:
                  params:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              trainer:
                description: Trainer should be set to run a training job.
                properties:
                  baseModel:
                    properties:
                      name:
                        type: string
                    type: object
                  datasetName:
                    description: Dataset to mount for training.
                    properties:
                      name:
                        type: string
                    type: object
                  params:
                    description: Params is a list of hyperparameters to use for training.
                    properties:
                      batchSize:
                        default: 1
                        description: BatchSize is the number of training records to
                          use per (forward and backward) pass through the model. Increasing
                          this number will increase the memory requirements of the
                          training process.
                        format: int64
                        type: integer
                      dataLimit:
                        default: 1000000000000
                        description: DataLimit is the maximum number of training records
                          to use. In the case of JSONL, this would be the total number
                          of lines to train with. Increasing this number will increase
                          training time.
                        format: int64
                        type: integer
                      epochs:
                        default: 3
                        description: Epochs is the total number of iterations that
                          should be run through the training data. Increasing this
                          number will increase training time.
                        format: int64
                        type: integer
                    type: object
                required:
                - datasetName
                - params
                type: object
            required:
            - container
            type: object
          status:
            description: Status is the observed state of the Model.
            properties:
              conditions:
                description: Conditions is the list of conditions that describe the
                  current state of the Model.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              ready:
                type: boolean
              servers:
                description: Servers is the list of servers that are currently running
                  this Model. Soon to be deprecated.
                items:
                  type: string
                type: array
              url:
                description: URL of model artifacts.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
